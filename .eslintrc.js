module.exports = {
  env: {
    browser: true,
    es6: true,
  },
  extends: [
    'airbnb-base',
    'plugin:perfectionist/recommended-natural',
  ],
  globals: {
    NodeJS: true,
  },
  parser: '@babel/eslint-parser',
  parserOptions: {
    ecmaVersion: 2018,
    sourceType: 'module',
    requireConfigFile: false,
  },
  plugins: [
    'sort-class-members',
  ],
  rules: {
    indent: ['error', 2],
    'max-len': ['warn', 200],
    'no-underscore-dangle': ['error'],
    'no-param-reassign': ['error',
      { props: false },
    ],
    'default-param-last': 'off',
    'no-constructor-return': 'off',
    'class-methods-use-this': 'off',
    'import/extensions': [
      'error',
      'ignorePackages',
      {
        ts: 'never',
        tsx: 'never',
        js: 'never',
        jsx: 'never',
      },
    ],
    'import/prefer-default-export': 'off',
    'import/no-extraneous-dependencies': ['error', { devDependencies: true }],
    'no-nested-ternary': 'off',
    'no-console': 'error',
    'perfectionist/sort-array-includes': 'off',
    'perfectionist/sort-classes': 'off',
    'perfectionist/sort-enums': 'off',
    'perfectionist/sort-exports': 'off',
    'perfectionist/sort-imports': 'off',
    'perfectionist/sort-interfaces': 'off',
    'perfectionist/sort-jsx-props': 'off',
    'perfectionist/sort-map-elements': 'off',
    'perfectionist/sort-named-exports': 'off',
    'perfectionist/sort-named-imports': 'off',
    'perfectionist/sort-object-types': 'off',
    'perfectionist/sort-objects': 'off',
    'perfectionist/sort-union-types': 'off',
    'sort-class-members/sort-class-members': [
      'warn',
      {
        order: [
          '[static-properties]',
          '[properties]',
          '[private-properties]',
          '[accessor-methods]',
          'constructor',
          '[static-methods]',
          '[arrow-function-properties]',
          '[methods]',
          '[private-arrow-functions-properties]',
          '[private-methods]',
          '[everything-else]',
        ],
        groups: {
          'private-properties': [{ type: 'property', private: true }],
          'private-methods': [{ type: 'method', private: true }],
          'accessor-methods': [{ type: 'method', kind: 'accessor' }],
          'private-arrow-functions-properties': [{ type: 'property', private: true, propertyType: 'ArrowFunctionExpression' }],
        },
        accessorPairPositioning: 'getThenSet',
      },
    ],
    'import/no-cycle': [
      'error',
      {
        allowUnsafeDynamicCyclicDependency: true,
      },
    ],
  },
  settings: {
    'import/parsers': {
      '@typescript-eslint/parser': ['.ts', '.tsx'],
    },
    'import/resolver': {
      jsconfig: {
        config: 'tsconfig.json',
        extensions: ['.js', '.jsx', '.ts', '.d.ts', '.tsx', '.json'],
      },
      node: {
        extensions: ['.js', '.jsx', '.ts', '.d.ts', '.tsx', '.json'],
      },
      typescript: {
        project: 'tsconfig.json',
      },
    },
    jsdoc: {
      mode: 'typescript',
    },
  },
  overrides: [{
    files: ['*.ts', '*.tsx'],
    extends: [
      'airbnb-base',
      'airbnb-typescript/base',
      'plugin:@typescript-eslint/recommended',
      'plugin:@typescript-eslint/recommended-requiring-type-checking',
    ],
    parser: '@typescript-eslint/parser',
    parserOptions: {
      project: 'tsconfig.json',
    },
    rules: {
      '@typescript-eslint/ban-ts-comment': 0,
      '@typescript-eslint/indent': ['error', 2],
      '@typescript-eslint/no-explicit-any': 0,
      '@typescript-eslint/no-misused-new': 0,
      '@typescript-eslint/no-empty-interface': [
        'error',
        {
          allowSingleExtends: true,
        },
      ],
      'no-underscore-dangle': [
        'error',
      ],
      'no-void': ['error', { allowAsStatement: true }],
      '@typescript-eslint/no-floating-promises': [
        'error',
        {
          ignoreVoid: true,
        },
      ],
      'max-len': ['warn', 200],
      'no-param-reassign': ['error', { props: false }],
      '@typescript-eslint/no-this-alias': 0,
      '@typescript-eslint/no-unused-vars': 'error',
      'no-constructor-return': 'off',
      'class-methods-use-this': 'off',
      'import/prefer-default-export': 'off',
      'no-console': 'error',
      'default-param-last': 'off',
      'no-nested-ternary': 'off',
      '@typescript-eslint/consistent-type-imports': 'error',
      '@typescript-eslint/no-import-type-side-effects': 'error',
      'sort-class-members/sort-class-members': [
        'warn',
        {
          order: [
            '[static-properties]',
            '[properties]',
            '[protected-properties-ts]',
            '[private-properties]',
            '[private-properties-ts]',
            '[accessor-methods]',
            'constructor',
            '[static-methods]',
            '[abstract-methods-ts]',
            '[arrow-function-properties]',
            '[methods]',
            '[protected-methods-ts]',
            '[private-arrow-functions-properties]',
            '[private-methods]',
            '[private-arrow-functions-properties-ts]',
            '[private-methods-ts]',
            '[everything-else]',
          ],
          groups: {
            'private-properties': [{ type: 'property', private: true }],
            'private-methods': [{ type: 'method', private: true }],
            'accessor-methods': [{ type: 'method', kind: 'accessor' }],
            'private-arrow-functions-properties': [{ type: 'property', private: true, propertyType: 'ArrowFunctionExpression' }],
            'private-properties-ts': [{ type: 'property', accessibility: 'private' }],
            'protected-properties-ts': [{ type: 'property', accessibility: 'protected' }],
            'abstract-methods-ts': [{ type: 'method', abstract: true }],
            'private-methods-ts': [{ type: 'method', accessibility: 'private' }],
            'protected-methods-ts': [{ type: 'method', accessibility: 'protected' }],
            'private-arrow-functions-properties-ts': [{ type: 'property', accessibility: 'private', propertyType: 'ArrowFunctionExpression' }],
          },
          accessorPairPositioning: 'getThenSet',
        },
      ],
      'import/no-cycle': [
        'error',
        {
          allowUnsafeDynamicCyclicDependency: true,
        },
      ],
    },
  }],
};
